<?php defined('SYSPATH') or die('No direct script access.');  class Controller_Uploaddata extends Controller_Layout {        	public function before(){             parent::before();                        $styles = array(            'css/help_css/help.css' => 'screen'            );             $scripts = array(             'js/help_js/jquery_002.js',             'js/help_js/highlight.js',            );             $this->template->styles = array_merge($this->template->styles, $styles);             $this->template->scripts = array_merge($this->template->scripts, $scripts);	     $this->template->set_filename('layout/admin');	}	  	public function __construct(Request $request)	{		if (Auth::instance()->logged_in('',$all_required=false) == 0) {                             Request::current()->redirect('/auth/signin');                }		// Assign the request to the controller    		parent::__construct($request);	}	public function action_index()	{                               $objLeads = ORM::factory('leads');		                                $objusers = ORM::factory('users');		$userData = $objusers->find_all()->as_array();                                             // echo "<pre>";                /*print_r($_POST);                print_r($_FILES);                print_r($_REQUEST);*/                                $lead_types = $_POST['search_campaign'];                $process_done = 0;                $duplicate=0;                $lead_uploaded = 0;                $total_leads = 0;          if ($_FILES['file_browse'][size] > 0) {                    //get the csv file                    $file = $_FILES['file_browse'][tmp_name];                    $handle = fopen($file,"r");           //loop through the csv file and insert into database                               do {                                               if ($data[0]) {                     $objLeads = ORM::factory('leads');                    $phone_no = $data[3];                    $check_data = $objLeads->where('phone','=',addslashes($phone_no))->where('user_id','=',$_POST['userdata'])->where('lead_type','=',$_POST['lead_type'])->find_all();                   //echo Database::instance()->last_query;exit;                    //print_r(count($check_data));                    $total_leads = $total_leads+1;                                                                                                    //echo Database::instance()->last_query;                                                            //echo $date2;exit;                                       //$objLeads->lead_types = $lead_types;                    $objLeads->lead_number = $data[1];                    $objLeads->lead_type = $_POST['lead_type'];                    $objLeads->lead_amount = $data[2];                    $objLeads->user_id = $_POST['userdata'];                    $objLeads->phone = $phone_no;                    $objLeads->email = $data[4];					$objLeads->lead_campaign = $_POST['search_lead_campaign'];                    $objLeads->sold_date = date('Y-m-d',  strtotime($data[0]));                                                                                   if(count($check_data)>0)                    {                        $dup_phone = $dup_phone.','.$phone_no;                         $duplicate = $duplicate+1;                    }                    else                    {                        if($data[2]!='Fname')                        {                                $last_inserted_id = $objLeads->save();                        }                        $lead_uploaded = $lead_uploaded+1;                    }                                    }            } while ($data = fgetcsv($handle,1000,",","'"));                        $process_done = 1;                    } //exit;       		                $this->template->title = "Upload Leads";		$this->template->content = View::factory('upload/upload_leads_tbl')                                    ->bind('callcenterData',$callcenterData)                                    ->bind('userData',$userData)                                    ->bind('total_leads',$total_leads)                                    ->bind('duplicate',$duplicate)                                    ->bind('process_done',$process_done)                                    ->bind('dup_phone',$dup_phone)                                    ->bind('lead_uploaded',$lead_uploaded);                                    	}                public function action_uploadforagent()	{            $objCallcenter = ORM::factory('callcenter');                        $callcenterData = $objCallcenter->find_all()->as_array();                                        $lead_types = $_POST['search_campaign'];                $process_done = 0;                $duplicate=0;                $lead_uploaded = 0;                $total_leads = 0;                          if ($_FILES['file_browse'][size] > 0) {                    //get the csv file                    $file = $_FILES['file_browse'][tmp_name];                    $handle = fopen($file,"r");                                                                                 //loop through the csv file and insert into database                                while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {                               if ($data[0]) {                    if($lead_types=='new_payday')                        $objLeads = ORM::factory('newpaydayleadupload');                    else                         $objLeads = ORM::factory('agentuploadlead');                                         $phone_no = $lead_types=='newcar'?$data[7]:$data[8];                    $zipcode = $data[5];                    list($m,$d,$y) = explode('/',$data[1]);                    $date2 = $y.'-'.$m.'-'.$d;                     list($m,$d,$y) = explode('/',$data[6]);                    $birthday = $y.'-'.$m.'-'.$d;                     $check_data = $objLeads->where('lead_types','=',$lead_types)->where('phone','=',addslashes($phone_no))->find_all();                    //echo Database::instance()->last_query;exit;                    //print_r(count($check_data));                    $total_leads = $total_leads+1;                                                                                 $call_center = $_POST['search_callcenter'];                    if($call_center == '3')                            $agentid = '66';                    else if($call_center == '5')                            $agentid = '68';                    else if($call_center == '2')                            $agentid = '69';                    else if($call_center == '4')                            $agentid = '70';                    else if($call_center == '7')                            $agentid = '71';                    else if($call_center == '1')                            $agentid = '72';                $objzip = ORM::factory('zip');                $check_data_based_zip = $objzip->where('zipcode','=',$zipcode)->find_all();                                if($lead_types=='new_payday')                    {                    $objzip = ORM::factory('zip');                      $phone = $data[10];                     $check_data = $objLeads->where('lead_types','=',$lead_types)->where('phone','=',addslashes($phone))->find_all();                        list($m,$d,$y) = explode('/',$data[1]);                        $date2 = $y.'-'.$m.'-'.$d;                         $fname = $data[2];                        $lname = $data[3];                       $address = $data[4];                                                $zip = $data[5];                        $ssn = $data[6];                        $uin = $data[7];                        list($m,$d,$y) = explode('/',$data[8]);                        $birthday = $y.'-'.$m.'-'.$d;                         $email = $data[9];                    $check_data_based_zip = $objzip->where('zipcode','=',$zip)->find_all();                    $objLeads->fname = $fname;                    $objLeads->lname = $lname;                    $objLeads->address = $address;                    $objLeads->city = $check_data_based_zip[0]->city;                    $objLeads->state = $check_data_based_zip[0]->state;                    $objLeads->zip = $zip;                    $objLeads->ssn = $ssn;                    $objLeads->uin = $uin;                    $objLeads->dob = $birthday;                    $objLeads->email = $email;                    $objLeads->phone = $phone;                    $objLeads->c_date = $date2;                  }                  else if($lead_types=='newcar')                  {                        list($m,$d,$y) = explode('/',$data[1]);                        $date2 = $y.'-'.$m.'-'.$d;                         $zip = $data[5];                        $check_data_based_zip = $objzip->where('zipcode','=',$zip)->find_all();                        $objLeads->fname = $data[2];                        $objLeads->lname = $data[3];                        $objLeads->address = $data[4];                        $objLeads->city = $check_data_based_zip[0]->city;                        $objLeads->state = $check_data_based_zip[0]->state;                        $objLeads->zip = $zip;                        $objLeads->email = $data[6];                        $objLeads->phone = $data[7];                        $objLeads->make = $data[8];                        $objLeads->model = $data[9];                        $objLeads->trim = $data[10];                        $objLeads->IP_address  = $data[11];                        $objLeads->c_date  = $date2;                        $objLeads->lead_types= $lead_types;                   }                  else                  {                    $phone_no = $lead_types=='new_car'?$data[7]:$data[8];                    $zipcode = $data[5];                    list($m,$d,$y) = explode('/',$data[1]);                    $date2 = $y.'-'.$m.'-'.$d;                     list($m,$d,$y) = explode('/',$data[6]);                    $birthday = $y.'-'.$m.'-'.$d;                     $check_data = $objLeads->where('lead_types','=',$lead_types)->where('phone','=',addslashes($phone_no))->find_all();                                       //echo Database::instance()->last_query;                    $year_of_resi = $data[15].'-00-00';                     $months_of_emp = $data[12].'-00-00';                     $objLeads->lead_types = $lead_types;                    $objLeads->callcenter = $call_center;                    $objLeads->callattended = $agentid;                    $objLeads->c_date = $date2;                    $objLeads->fname = $data[2];                    $objLeads->lname = $data[3];                    $objLeads->address = $data[4];                    $objLeads->city = $check_data_based_zip[0]->city;                    $objLeads->state = $check_data_based_zip[0]->state;                    $objLeads->zip = $data[5];                    $objLeads->birthday = $birthday;                    $objLeads->email = $lead_types=='new_car'?$data[6]:$data[7];                    $objLeads->phone = $lead_types=='new_car'?$data[7]:$data[8];                    $objLeads->emp_work_phone = $data[9];                    $objLeads->employer = $data[10];                    $objLeads->occupation = $data[11];                    $objLeads->months_of_emp = $months_of_emp;                    $objLeads->monthly_income = $data[13];                    $objLeads->rent_own = $data[14];                    $objLeads->year_of_resi = $year_of_resi;                    $objLeads->home_pay = $data[16];                    $objLeads->ssn = $data[17];                    $objLeads->bankrupt = $data[18];                    $objLeads->co_sign = $data[19];                    $objLeads->loan_amount = $data[20];                    $objLeads->credit_rating = $data[21];                    $objLeads->IP_address = $lead_types=='new_car'?$data[11]:$data[22];                    $objLeads->best_time_contact = 'Any Time';                    $objLeads->make=$lead_types=='new_car'?$data[8]:'';                    $objLeads->model=$lead_types=='new_car'?$data[9]:'';                    $objLeads->trim=$lead_types=='new_car'?$data[10]:'';							                  }                                      if(count($check_data)>0)                    {                        $duplicate = $duplicate+1;                    }                    else                    {                                               $last_inserted_id = $objLeads->save();                        $lead_uploaded = $lead_uploaded+1;                    }                                    }            } ;                        $process_done = 1;                    }                                  $this->template->title = "Upload Leads For Agent";	    $this->template->content = View::factory('upload/upload_leads_for_agent')                                    ->bind('callcenterData',$callcenterData)                                    ->bind('total_leads',$total_leads)                                    ->bind('duplicate',$duplicate)                                    ->bind('process_done',$process_done)                                    ->bind('lead_uploaded',$lead_uploaded);        }                     function getCSVValues($string, $separator=",")    {        $elements = explode($separator, $string);                for ($i = 0; $i < count($elements); $i++)         {            $nquotes = substr_count($elements[$i], '"');                        if ($nquotes %2 == 1)            {                for ($j = $i+1; $j < count($elements); $j++)                 {                    if (substr_count($elements[$j], '"') > 0)                     {                        // Put the quoted string's pieces back together again                        array_splice($elements, $i, $j-$i+1,                        implode($separator, array_slice($elements, $i, $j-$i+1)));                        break;                    }                }            }                        if ($nquotes > 0)             {                // Remove first and last quotes, then merge pairs of quotes                $qstr =& $elements[$i];                $qstr = substr_replace($qstr, '', strpos($qstr, '"'), 1);                $qstr = substr_replace($qstr, '', strrpos($qstr, '"'), 1);                $qstr = str_replace('""', '"', $qstr);            }        }                return $elements;    }       } // End Welcome